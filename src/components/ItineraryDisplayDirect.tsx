/**
 * Direct Itinerary Display - No Polling Required
 * 
 * Since the AI workflow now returns the complete itinerary immediately,
 * we just display it directly without any polling complexity.
 */

import React from 'react';
import { Download, Mail, MapPin, AlertCircle, CheckCircle2 } from 'lucide-react';
import ResilientLoading from './ResilientLoading';
import type { TravelFormData } from '../types/travel-form';

interface ItineraryDisplayProps {
  formData?: TravelFormData | null;
  isLoading: boolean;
  error?: string;
  aiItinerary?: any;
  className?: string;
}

const PersonalizedItineraryTitle: React.FC = () => (
  <div className="text-center mb-6">
    <h1 className="text-3xl font-bold font-raleway">
      <span className="text-[#ece8de]">YOUR </span>
      <span className="text-[#f9dd8b]">PERSONALIZED </span>
      <span className="text-[#ece8de]">ITINERARY</span>
    </h1>
  </div>
);

const SectionHeader: React.FC<{ icon?: string; title: string }> = ({ icon, title }) => (
  <div className="bg-form-box rounded-[36px] p-6 shadow-lg border border-gray-200 mb-6">
    <h2 className="text-2xl font-bold text-primary font-raleway flex items-center">
      {icon && <span className="mr-3">{icon}</span>}
      {title}
    </h2>
  </div>
);

const ItineraryContent: React.FC<{ content: string }> = ({ content }) => (
  <div className="bg-form-box rounded-[36px] p-8 shadow-lg border border-gray-200 mb-6">
    <div className="prose prose-lg max-w-none">
      <div className="whitespace-pre-wrap text-gray-800 leading-relaxed">
        {content}
      </div>
    </div>
  </div>
);

const ItineraryDisplayDirect: React.FC<ItineraryDisplayProps> = ({
  formData,
  isLoading,
  error,
  aiItinerary,
  className = '',
}) => {
  // Show error state
  if (error) {
    return (
      <div className={`${className} p-6`}>
        <div className="bg-red-50 border border-red-200 rounded-[36px] p-8 text-center">
          <AlertCircle className="w-12 h-12 text-red-600 mx-auto mb-4" />
          <div className="text-red-600 text-xl font-bold mb-4">Generation Failed</div>
          <div className="text-red-700 mb-4">{error}</div>
          <div className="text-sm text-red-600">
            Please try again or contact support if the issue persists.
          </div>
        </div>
      </div>
    );
  }

  // Show loading state
  if (isLoading) {
    return (
      <div className={`${className} p-6`}>
        <div className="bg-form-box rounded-[36px] p-8 text-center border border-gray-200">
          <ResilientLoading isLoading={true} />
          <div className="mt-6">
            <h3 className="text-2xl font-bold text-primary font-raleway mb-4">
              <span className="text-[#f9dd8b]">XAI GROK</span> CRAFTING YOUR ITINERARY
            </h3>
            <div className="text-gray-700">
              ‚ú® Creating your personalized travel experience...
            </div>
          </div>
        </div>
      </div>
    );
  }

  // Show success state with itinerary
  if (aiItinerary) {
    return (
      <div className={`${className} p-6`}>
        <PersonalizedItineraryTitle />
        
        {/* Success Banner */}
        <div className="bg-green-50 border border-green-200 rounded-[36px] p-6 mb-6 text-center">
          <CheckCircle2 className="w-8 h-8 text-green-600 mx-auto mb-3" />
          <div className="text-green-800 font-bold text-lg">
            Your itinerary is ready!
          </div>
          <div className="text-green-700 text-sm mt-2">
            Generated by {aiItinerary.generatedBy || 'XAI Grok-4 Fast Reasoning'} ‚Ä¢ {aiItinerary.completedAt ? new Date(aiItinerary.completedAt).toLocaleString() : 'Just now'}
          </div>
        </div>

        {/* Trip Overview */}
        <SectionHeader icon="üìç" title={`${aiItinerary.title || `${formData?.location} Travel Itinerary`}`} />
        
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
          <div className="bg-form-box rounded-[24px] p-4 text-center border border-gray-200">
            <MapPin className="w-6 h-6 text-primary mx-auto mb-2" />
            <div className="font-bold text-primary">Destination</div>
            <div className="text-gray-700">{aiItinerary.destination || formData?.location}</div>
          </div>
          <div className="bg-form-box rounded-[24px] p-4 text-center border border-gray-200">
            <div className="text-2xl mb-2">‚è∞</div>
            <div className="font-bold text-primary">Duration</div>
            <div className="text-gray-700">{aiItinerary.duration || formData?.plannedDays} days</div>
          </div>
          <div className="bg-form-box rounded-[24px] p-4 text-center border border-gray-200">
            <div className="text-2xl mb-2">üë•</div>
            <div className="font-bold text-primary">Travelers</div>
            <div className="text-gray-700">{aiItinerary.travelers || formData?.adults} adults</div>
          </div>
          <div className="bg-form-box rounded-[24px] p-4 text-center border border-gray-200">
            <div className="text-2xl mb-2">üí∞</div>
            <div className="font-bold text-primary">Budget</div>
            <div className="text-gray-700">${formData?.budget?.total?.toLocaleString() || 'N/A'}</div>
          </div>
        </div>

        {/* Main Itinerary Content */}
        <SectionHeader icon="üìã" title="Your Detailed Itinerary" />
        <ItineraryContent content={aiItinerary.content || 'No content available'} />

        {/* Additional Information */}
        {(aiItinerary.architecture || aiItinerary.research || aiItinerary.recommendations) && (
          <>
            <SectionHeader icon="üîç" title="AI Research & Planning" />
            
            {aiItinerary.architecture && (
              <div className="bg-blue-50 rounded-[36px] p-6 mb-4 border border-blue-200">
                <h4 className="font-bold text-blue-800 mb-3">üèóÔ∏è Architecture Planning</h4>
                <div className="text-blue-700 text-sm whitespace-pre-wrap">
                  {typeof aiItinerary.architecture === 'string' 
                    ? aiItinerary.architecture.slice(0, 300) + '...'
                    : 'Architecture data available'
                  }
                </div>
              </div>
            )}

            {aiItinerary.research && (
              <div className="bg-purple-50 rounded-[36px] p-6 mb-4 border border-purple-200">
                <h4 className="font-bold text-purple-800 mb-3">üìö Research Findings</h4>
                <div className="text-purple-700 text-sm whitespace-pre-wrap">
                  {typeof aiItinerary.research === 'string' 
                    ? aiItinerary.research.slice(0, 300) + '...'
                    : 'Research data available'
                  }
                </div>
              </div>
            )}

            {aiItinerary.recommendations && (
              <div className="bg-orange-50 rounded-[36px] p-6 mb-4 border border-orange-200">
                <h4 className="font-bold text-orange-800 mb-3">üë®‚Äçüíº Specialist Recommendations</h4>
                <div className="text-orange-700 text-sm whitespace-pre-wrap">
                  {typeof aiItinerary.recommendations === 'string' 
                    ? aiItinerary.recommendations.slice(0, 300) + '...'
                    : 'Recommendations data available'
                  }
                </div>
              </div>
            )}
          </>
        )}

        {/* Action Buttons */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center mt-8">
          <button className="bg-primary text-white px-6 py-3 rounded-[24px] hover:bg-primary/90 transition-colors flex items-center justify-center space-x-2">
            <Download className="w-5 h-5" />
            <span>Download PDF</span>
          </button>
          <button className="bg-gray-600 text-white px-6 py-3 rounded-[24px] hover:bg-gray-700 transition-colors flex items-center justify-center space-x-2">
            <Mail className="w-5 h-5" />
            <span>Email Itinerary</span>
          </button>
        </div>
      </div>
    );
  }

  // Default state - waiting for form data
  return (
    <div className={`${className} p-6`}>
      <div className="bg-form-box rounded-[36px] p-8 text-center border border-gray-200">
        <h3 className="text-2xl font-bold text-primary font-raleway mb-4">
          Ready to Create Your Perfect Trip?
        </h3>
        <p className="text-gray-700">
          Fill out the form above to generate your personalized itinerary
        </p>
      </div>
    </div>
  );
};

export default ItineraryDisplayDirect;