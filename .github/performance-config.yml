# Performance Testing Configuration
# This file contains baseline performance metrics and thresholds for the Hylo Travel AI platform

performance:
  # Response time thresholds (milliseconds)
  thresholds:
    p50: 500      # 50th percentile - median response time
    p75: 800      # 75th percentile response time  
    p90: 1200     # 90th percentile response time
    p95: 2000     # 95th percentile response time - CI threshold
    p99: 5000     # 99th percentile response time - CI threshold
    max: 10000    # Maximum acceptable response time

  # Load testing configuration
  load_testing:
    duration: 300           # Test duration in seconds (5 minutes)
    concurrent_users: 50    # Number of concurrent virtual users
    ramp_up_duration: 30   # Time to ramp up to max users
    ramp_down_duration: 30 # Time to ramp down from max users
    
    # Scenarios and their distribution
    scenarios:
      - name: "form_submission"
        weight: 40
        description: "Submit travel form data"
      - name: "itinerary_generation"
        weight: 30  
        description: "Generate travel itinerary"
      - name: "preference_updates"
        weight: 20
        description: "Update travel preferences"
      - name: "health_checks"
        weight: 10
        description: "System health monitoring"

  # Resource usage thresholds
  resources:
    cpu_usage_max: 80      # Maximum CPU usage percentage
    memory_usage_max: 85   # Maximum memory usage percentage
    disk_io_max: 1000      # Maximum disk I/O operations per second

  # Error rate thresholds
  error_rates:
    max_error_rate: 1.0    # Maximum 1% error rate
    max_timeout_rate: 0.5  # Maximum 0.5% timeout rate
    max_5xx_rate: 0.1      # Maximum 0.1% server error rate

# Endpoints to test
endpoints:
  - path: "/api/health/system"
    method: "GET"
    expected_status: 200
    weight: 5
    timeout: 5000

  - path: "/api/rag/submit-form"
    method: "POST"
    expected_status: 200
    weight: 25
    timeout: 15000
    headers:
      Content-Type: "application/json"
    
  - path: "/api/rag/generate-itinerary"
    method: "POST" 
    expected_status: 200
    weight: 30
    timeout: 30000
    headers:
      Content-Type: "application/json"

  - path: "/api/llm/providers"
    method: "GET"
    expected_status: 200
    weight: 10
    timeout: 10000

  - path: "/api/providers/status"
    method: "GET"
    expected_status: 200
    weight: 15
    timeout: 8000

# Performance regression detection
regression:
  # Percentage increase that triggers a regression alert
  threshold_increase:
    p95: 20    # 20% increase in P95 triggers alert
    p99: 15    # 15% increase in P99 triggers alert
    error_rate: 50  # 50% increase in error rate triggers alert
  
  # Minimum number of historical data points needed for comparison
  min_historical_points: 3
  
  # Number of recent builds to compare against
  comparison_window: 5

# Monitoring and alerting
monitoring:
  # Metrics collection interval
  collection_interval: 10  # seconds
  
  # Alert conditions
  alerts:
    - name: "High Response Time"
      condition: "p95 > thresholds.p95"
      severity: "warning"
    
    - name: "Critical Response Time"
      condition: "p99 > thresholds.p99"
      severity: "critical"
    
    - name: "High Error Rate"
      condition: "error_rate > error_rates.max_error_rate"
      severity: "critical"
    
    - name: "Resource Exhaustion"
      condition: "cpu_usage > resources.cpu_usage_max OR memory_usage > resources.memory_usage_max"
      severity: "warning"

# Test data configuration
test_data:
  # Number of test scenarios to generate
  scenario_count: 100
  
  # Test user profiles
  user_profiles:
    - name: "family_traveler"
      weight: 40
      characteristics:
        adults: [2, 4]
        children: [1, 3]
        budget: "moderate"
    
    - name: "business_traveler"
      weight: 25
      characteristics:
        adults: [1, 2]
        children: 0
        budget: "high"
    
    - name: "adventure_traveler"
      weight: 20
      characteristics:
        adults: [2, 6]
        children: [0, 2]
        budget: "moderate"
    
    - name: "luxury_traveler"
      weight: 15
      characteristics:
        adults: [2, 4]
        children: [0, 2]
        budget: "luxury"

# CI/CD Integration
ci_integration:
  # Fail build on performance regression
  fail_on_regression: true
  
  # Performance test execution conditions
  run_conditions:
    - branch: "main"
      trigger: "push"
    - branch: "develop"
      trigger: "push"
    - schedule: "weekly"
    - manual: true
  
  # Artifact retention
  artifacts:
    retention_days: 90
    baseline_retention_days: 365
  
  # Notification settings
  notifications:
    slack_webhook: "${SLACK_WEBHOOK_URL}"
    email_recipients: ["devops@hylo.travel"]
    pr_comments: true