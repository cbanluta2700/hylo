{
  "openapi": "3.0.3",
  "info": {
    "title": "Hylo AI Multi-Agent Workflow API",
    "description": "API for coordinating multi-agent AI workflows for travel itinerary generation",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://hylo.vercel.app/api",
      "description": "Production API"
    },
    {
      "url": "http://localhost:3000/api",
      "description": "Development API"
    }
  ],
  "paths": {
    "/agents/workflow/start": {
      "post": {
        "summary": "Initialize multi-agent workflow session",
        "description": "Creates a new workflow session and starts the multi-agent itinerary generation process",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowStartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow session created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStartResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/agents/workflow/{sessionId}/status": {
      "get": {
        "summary": "Get workflow session status",
        "description": "Retrieves current status and progress of a workflow session",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique workflow session identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Workflow session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/agents/workflow/{sessionId}/stream": {
      "get": {
        "summary": "Stream real-time workflow updates",
        "description": "Establishes Server-Sent Events connection for real-time workflow progress updates",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique workflow session identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Stream established successfully",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStreamEvent"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "no-cache",
                "schema": {
                  "type": "string"
                }
              },
              "Connection": {
                "description": "keep-alive",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Workflow session not found"
          }
        }
      }
    },
    "/agents/workflow/{sessionId}/result": {
      "get": {
        "summary": "Get final itinerary result",
        "description": "Retrieves the completed itinerary output when workflow is finished",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique workflow session identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Itinerary result retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItineraryResult"
                }
              }
            }
          },
          "202": {
            "description": "Workflow still in progress",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Workflow session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/agents/workflow/{sessionId}/cancel": {
      "post": {
        "summary": "Cancel running workflow",
        "description": "Cancels an active workflow session and cleans up resources",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique workflow session identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowCancelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Workflow session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WorkflowStartRequest": {
        "type": "object",
        "required": ["formData"],
        "properties": {
          "formData": {
            "$ref": "#/components/schemas/TripFormData"
          },
          "options": {
            "type": "object",
            "properties": {
              "priority": {
                "type": "string",
                "enum": ["standard", "fast", "detailed"],
                "default": "standard"
              },
              "includeWebSearch": {
                "type": "boolean",
                "default": true
              }
            }
          }
        }
      },
      "TripFormData": {
        "type": "object",
        "required": ["destination", "departureDate", "adults", "contactName"],
        "properties": {
          "destination": {
            "type": "string",
            "description": "Travel destination"
          },
          "departureDate": {
            "type": "string",
            "format": "date",
            "description": "Trip start date"
          },
          "returnDate": {
            "type": "string",
            "format": "date",
            "description": "Trip return date (optional for open-ended trips)"
          },
          "plannedDays": {
            "type": "integer",
            "minimum": 1,
            "maximum": 30,
            "description": "Number of planned days (alternative to return date)"
          },
          "adults": {
            "type": "integer",
            "minimum": 1,
            "maximum": 20
          },
          "children": {
            "type": "integer",
            "minimum": 0,
            "maximum": 10
          },
          "budget": {
            "type": "object",
            "required": ["amount", "currency", "mode"],
            "properties": {
              "amount": {
                "type": "number",
                "minimum": 0
              },
              "currency": {
                "type": "string",
                "enum": ["USD", "EUR", "GBP", "CAD", "AUD"]
              },
              "mode": {
                "type": "string",
                "enum": ["per-person", "total", "flexible"]
              }
            }
          },
          "contactName": {
            "type": "string",
            "description": "Name for 'Prepared for' section"
          },
          "tripNickname": {
            "type": "string",
            "description": "Optional trip nickname"
          },
          "preferences": {
            "type": "object",
            "properties": {
              "travelStyle": {
                "type": "string",
                "enum": ["adventure", "relaxation", "culture", "business", "family"]
              },
              "interests": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "WorkflowStartResponse": {
        "type": "object",
        "required": ["sessionId", "status", "estimatedCompletionTime"],
        "properties": {
          "sessionId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing"]
          },
          "estimatedCompletionTime": {
            "type": "integer",
            "description": "Estimated completion time in seconds"
          },
          "streamUrl": {
            "type": "string",
            "description": "URL for real-time updates"
          }
        }
      },
      "WorkflowStatusResponse": {
        "type": "object",
        "required": ["sessionId", "status", "progress"],
        "properties": {
          "sessionId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "completed", "failed", "cancelled"]
          },
          "progress": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "currentAgent": {
            "type": "string",
            "enum": ["content_planner", "info_gatherer", "strategist", "compiler"]
          },
          "agentProgress": {
            "type": "object",
            "properties": {
              "content_planner": {
                "type": "string",
                "enum": ["pending", "processing", "completed", "failed"]
              },
              "info_gatherer": {
                "type": "string",
                "enum": ["pending", "processing", "completed", "failed"]
              },
              "strategist": {
                "type": "string",
                "enum": ["pending", "processing", "completed", "failed"]
              },
              "compiler": {
                "type": "string",
                "enum": ["pending", "processing", "completed", "failed"]
              }
            }
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "estimatedCompletionTime": {
            "type": "string",
            "format": "date-time"
          },
          "costs": {
            "type": "object",
            "properties": {
              "totalCost": {
                "type": "number"
              },
              "costPerAgent": {
                "type": "object"
              }
            }
          }
        }
      },
      "WorkflowStreamEvent": {
        "type": "object",
        "required": ["type", "data"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["progress", "agent_complete", "error", "complete"]
          },
          "data": {
            "type": "object",
            "properties": {
              "progress": {
                "type": "integer"
              },
              "message": {
                "type": "string"
              },
              "agent": {
                "type": "string"
              },
              "result": {
                "type": "object"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ItineraryResult": {
        "type": "object",
        "required": ["tripSummary", "preparedFor", "dailyItinerary", "tipsSection"],
        "properties": {
          "tripSummary": {
            "type": "object",
            "required": ["dates", "travelers", "budget"],
            "properties": {
              "nickname": {
                "type": "string"
              },
              "dates": {
                "type": "object",
                "properties": {
                  "departure": {
                    "type": "string",
                    "format": "date"
                  },
                  "return": {
                    "type": "string",
                    "format": "date"
                  },
                  "plannedDays": {
                    "type": "integer"
                  }
                }
              },
              "travelers": {
                "type": "object",
                "required": ["adults"],
                "properties": {
                  "adults": {
                    "type": "integer"
                  },
                  "children": {
                    "type": "integer"
                  }
                }
              },
              "budget": {
                "type": "object",
                "required": ["amount", "currency", "mode"],
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "mode": {
                    "type": "string",
                    "enum": ["per-person", "total", "flexible"]
                  }
                }
              }
            }
          },
          "preparedFor": {
            "type": "string"
          },
          "dailyItinerary": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["day", "date", "activities"],
              "properties": {
                "day": {
                  "type": "integer"
                },
                "date": {
                  "type": "string",
                  "format": "date"
                },
                "activities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["time", "activity", "location"],
                    "properties": {
                      "time": {
                        "type": "string"
                      },
                      "activity": {
                        "type": "string"
                      },
                      "location": {
                        "type": "string"
                      },
                      "notes": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "tipsSection": {
            "type": "object",
            "required": ["title", "tips"],
            "properties": {
              "title": {
                "type": "string",
                "const": "TIPS FOR YOUR TRIP"
              },
              "tips": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["category", "tip"],
                  "properties": {
                    "category": {
                      "type": "string"
                    },
                    "tip": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "properties": {
              "generationTime": {
                "type": "string",
                "format": "date-time"
              },
              "totalCost": {
                "type": "number"
              },
              "agentsUsed": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "WorkflowCancelResponse": {
        "type": "object",
        "required": ["sessionId", "status", "message"],
        "properties": {
          "sessionId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "const": "cancelled"
          },
          "message": {
            "type": "string"
          },
          "partialResults": {
            "type": "object",
            "description": "Any partial results if agents had completed work"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object"
          },
          "sessionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}